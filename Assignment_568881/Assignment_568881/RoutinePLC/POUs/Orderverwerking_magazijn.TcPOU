<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="Orderverwerking_magazijn" Id="{83129f9a-16c0-43eb-8cf6-9fe7bb84c598}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM Orderverwerking_magazijn
VAR
	currentState : Taak_1 := Taak_1.NieuweOrderGaragist;   
	Nieuwe_order: BOOL ;
	Order_magazijn: BOOL;
	Order_uitgeprint: BOOL;
	Timer : TON;
	WachtTijd_taak_1 : INT;
	Order_verzameld: BOOL; 
	Geannuleerd: BOOL;
	Order_voltooid: BOOL;
	Taak1Reset: BOOL;
	Pakfout: BOOL;
	WelOpVoorraad: BOOL;
	NietOpVoorraad: BOOL;
	Correct: BOOL;
	Incorrect: BOOL;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[CASE currentState OF
    Taak_1.NieuweOrderGaragist:
        // Nieuwe bestelling van een garagist
        IF RoutineGVL.Nieuwe_order = TRUE THEN
            currentState := VoorraadAdministratief;
        END_IF;
		
	Taak_1.VoorraadAdministratief:
		// Controleren of de voorraad klopt (Adminastratief)
		IF RoutineGVL.WelOpVoorraad = TRUE AND RoutineGVL.Nieuwe_order = TRUE THEN // Op Voorraad
			RoutineGVL.Order_magazijn := TRUE;
			RoutineGVL.Order_uitgeprint := TRUE;
			RoutineGVL.Timer_taak_1(IN:=TRUE, PT:=T#5S); // Timer simuleert het verzamelen van de artikelen
			IF RoutineGVL.Timer_taak_1.Q = TRUE THEN
				RoutineGVL.Order_verzameld := TRUE;
				RoutineGVL.Geannuleerd := FALSE;
				currentState := VerzamelingArtikelen;
			END_IF	
			
		ELSIF RoutineGVL.NietOpVoorraad = TRUE THEN // Niet op voorraad (administratief)
			currentState := OrderGeannuleerd;
		END_IF
	
		
	Taak_1.VerzamelingArtikelen:
	// Controleren of de verzamelde artikelen overeenkomen met de orderverzamellijst
		IF RoutineGVL.Correct = TRUE THEN //Goedekeurd, print pakbon en artikelen inpakken
			currentState := OrderVoltooid;
		ELSIF RoutineGVL.Incorrect = TRUE THEN // Niet op voorraad (werkelijke voorraad)
			currentState := OrderGeannuleerd;
		ELSIF RoutineGVL.Pakfout = TRUE THEN //Pakfout, opnieuw verzamelen
			RoutineGVL.Pakfout:= TRUE;
		END_IF
		
	// Order verwerking in magazijn afgerond	
	Taak_1.OrderVoltooid: 
			RoutineGVL.Nieuwe_order := FALSE;
			RoutineGVL.WelOpVoorraad := FALSE;
			RoutineGVL.NietOpVoorraad := FALSE;
			RoutineGVL.Order_magazijn := FALSE;
			RoutineGVL.Order_uitgeprint := FALSE;
			RoutineGVL.Timer_taak_1(IN:=FALSE);
			RoutineGVL.Order_verzameld := FALSE;	
			RoutineGVL.Pakfout:= FALSE;
			RoutineGVL.Order_voltooid := TRUE;		
	
	// Geannulleerd
	Taak_1.OrderGeannuleerd:
			RoutineGVL.Nieuwe_order := FALSE;
			RoutineGVL.WelOpVoorraad := FALSE;
			RoutineGVL.NietOpVoorraad := FALSE;
			RoutineGVL.Order_magazijn := FALSE;
			RoutineGVL.Order_uitgeprint := FALSE;
			RoutineGVL.Timer_taak_1(IN:=FALSE);
			RoutineGVL.Order_verzameld := FALSE;
			RoutineGVL.Pakfout:= FALSE;
			RoutineGVL.Geannuleerd := TRUE;
		
END_CASE;
// Het resetten van de taak 
IF RoutineGVL.Taak1Reset = TRUE THEN
	currentState := Taak_1.NieuweOrderGaragist;
	RoutineGVL.Nieuwe_order := FALSE;
	RoutineGVL.WelOpVoorraad := FALSE;
	RoutineGVL.NietOpVoorraad := FALSE;
	RoutineGVL.Order_magazijn := FALSE;
	RoutineGVL.Order_uitgeprint := FALSE;
	RoutineGVL.Timer_taak_1(IN:=FALSE);
	RoutineGVL.Order_verzameld := FALSE;
	RoutineGVL.Order_voltooid := FALSE;
	RoutineGVL.Geannuleerd := FALSE;
	RoutineGVL.Taak1Reset := FALSE;
	RoutineGVL.Pakfout:= FALSE;
END_IF
RoutineGVL.WachtTijd_taak_1 := TIME_TO_INT(RoutineGVL.Timer_taak_1.ET) / 1000; // De tijd omzetten in een integer voor de progressbar
]]></ST>
    </Implementation>
    <LineIds Name="Orderverwerking_magazijn">
      <LineId Id="18" Count="11" />
      <LineId Id="70" Count="1" />
      <LineId Id="74" Count="1" />
      <LineId Id="72" Count="0" />
      <LineId Id="69" Count="0" />
      <LineId Id="32" Count="1" />
      <LineId Id="37" Count="7" />
      <LineId Id="46" Count="0" />
      <LineId Id="149" Count="0" />
      <LineId Id="148" Count="0" />
      <LineId Id="94" Count="0" />
      <LineId Id="52" Count="0" />
      <LineId Id="169" Count="0" />
      <LineId Id="130" Count="0" />
      <LineId Id="108" Count="0" />
      <LineId Id="111" Count="1" />
      <LineId Id="118" Count="0" />
      <LineId Id="113" Count="1" />
      <LineId Id="145" Count="0" />
      <LineId Id="115" Count="0" />
      <LineId Id="133" Count="0" />
      <LineId Id="131" Count="0" />
      <LineId Id="110" Count="0" />
      <LineId Id="170" Count="0" />
      <LineId Id="122" Count="0" />
      <LineId Id="125" Count="4" />
      <LineId Id="146" Count="0" />
      <LineId Id="123" Count="0" />
      <LineId Id="134" Count="0" />
      <LineId Id="132" Count="0" />
      <LineId Id="124" Count="0" />
      <LineId Id="5" Count="0" />
      <LineId Id="171" Count="0" />
      <LineId Id="76" Count="0" />
      <LineId Id="89" Count="0" />
      <LineId Id="136" Count="4" />
      <LineId Id="147" Count="0" />
      <LineId Id="135" Count="0" />
      <LineId Id="86" Count="0" />
      <LineId Id="119" Count="0" />
      <LineId Id="90" Count="0" />
      <LineId Id="120" Count="0" />
      <LineId Id="78" Count="0" />
      <LineId Id="142" Count="0" />
      <LineId Id="144" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>